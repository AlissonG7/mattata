local bindings = require('mattata.bindings')
local utilities = require('mattata.utilities')
local bigtext = {}
function bigtext:init(config)
	bigtext.triggers = utilities.triggers(self.info.username, config.cmd_pat)
		:t('bigtext', true):t('bt', true).table
	bigtext.doc = config.cmd_pat .. [[bigtext <text>
Converts the given text into 'big' unicode text.
Alias: ]] .. config.cmd_pat .. 'bt'
	bigtext.command = 'bigtext <text>'
end
function bigtext:action(msg, config)
	local input = utilities.input(msg.text_lower)
	if not input then
		if msg.reply_to_message and msg.reply_to_message.text then
			input = msg.reply_to_message.text
		else
			utilities.send_reply(self, msg, bigtext.doc, true)
			return
		end
	end
	bindings.sendChatAction(self, { chat_id = msg.chat.id, action = 'typing' } )
	local output = input:gsub('a', 'ğŸ‡¦ '):gsub('b', 'ğŸ‡§ '):gsub('c', 'ğŸ‡¨ '):gsub('d', 'ğŸ‡© '):gsub('e', 'ğŸ‡ª '):gsub('f', 'ğŸ‡« '):gsub('g', 'ğŸ‡¬ '):gsub('h', 'ğŸ‡­ '):gsub('i', 'ğŸ‡® '):gsub('j', 'ğŸ‡¯ '):gsub('k', 'ğŸ‡° '):gsub('l', 'ğŸ‡± '):gsub('m', 'ğŸ‡² '):gsub('n', 'ğŸ‡³ '):gsub('o', 'ğŸ‡´ '):gsub('p', 'ğŸ‡µ '):gsub('q', 'ğŸ‡¶ '):gsub('r', 'ğŸ‡· '):gsub('s', 'ğŸ‡¸ '):gsub('t', 'ğŸ‡¹ '):gsub('u', 'ğŸ‡º '):gsub('v', 'ğŸ‡» '):gsub('w', 'ğŸ‡¼ '):gsub('x', 'ğŸ‡½ '):gsub('y', 'ğŸ‡¾ '):gsub('z', 'ğŸ‡¿ ')
	utilities.send_message(self, msg.chat.id, output, true, nil, true)
end
return bigtext